buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.13.2"
        classpath "org.grails.plugins:hibernate4:5.0.10"
        classpath 'org.grails.plugins:database-migration:2.0.0.RC4'
    }
}

version "0.61"
group "samba"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile fileTree(dir: './lib', include: ['*.jar'])
    compile "com.github.jsimone:webapp-runner:8.5.5.0"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    //compile "org.springframework.boot:spring-boot-starter-web"

    compile "org.postgresql:postgresql:9.4-1201-jdbc4"

    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate4"

    compile "org.grails:grails-plugin-rest"
	//compile "org.grails:grails-plugin-url-mappings"

    compile "org.hibernate:hibernate-ehcache"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.13.2"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    runtime "org.grails.plugins:database-migration:2.0.0.RC4"

    compile "org.grails.plugins:spring-security-core:3.0.3"
    compile "org.grails.plugins:cookie-session:3.0.1"

    compile 'org.grails.plugins:qrcode:0.9'
    compile 'org.grails.plugins:mail:2.0.0.RC6'
    compile 'org.grails.plugins:quartz:2.0.12'
	
	compile 'org.grails.plugins:jasypt-encryption:2.0.2'
	compile 'io.conekta:conekta-java:2.1.1'
	
}

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}

assets {
    minifyJs = true
    minifyCss = true
    includes = ["fonts/*"]
}

configurations {
    provided.all*.exclude group: 'javax.servlet'
}
task stage() {
    dependsOn clean, war
}
tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)